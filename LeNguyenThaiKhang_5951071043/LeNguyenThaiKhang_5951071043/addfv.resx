<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>